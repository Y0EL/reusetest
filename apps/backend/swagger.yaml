swagger: '2.0'
info:
  title: 'Reuse API'
  version: '1.0.0'
  description: 'API documentation for the Reuse application'

tags:
  - name: submission
    description: Receipt submission endpoints
  - name: health
    description: Health check endpoints
  - name: telegram
    description: Telegram bot integration endpoints

paths:
  /submitReceipt:
    post:
      tags:
        - submission
      summary: Submit a receipt for processing
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: Receipt data
          required: true
          schema:
            $ref: '#/definitions/submitReceipt'
      responses:
        200:
          description: 'Submission successful'
          schema:
            $ref: '#/definitions/SubmissionResponse'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
  
  /submitReceipt/remaining/{address}:
    get:
      tags:
        - submission
      summary: Get remaining submissions for a wallet
      parameters:
        - name: address
          in: path
          required: true
          type: string
          description: Wallet address (0x format)
      produces:
        - application/json
      responses:
        200:
          description: 'Remaining submissions count'
          schema:
            type: object
            properties:
              remaining:
                type: integer
                example: 3
              max:
                type: integer
                example: 5
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'
  
  /health:
    get:
      tags:
        - health
      summary: Check if the API is running properly
      produces:
        - application/json
      responses:
        200:
          description: 'API is healthy'
          schema:
            type: object
            properties:
              status:
                type: string
                example: 'ok'
              message:
                type: string
                example: 'API is running'
  
  /api/telegram:
    post:
      tags:
        - telegram
      summary: Telegram bot webhook endpoint
      description: Handles incoming messages from the Telegram Bot API
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              update_id:
                type: integer
              message:
                type: object
                properties:
                  message_id:
                    type: integer
                  from:
                    type: object
                  chat:
                    type: object
                  text:
                    type: string
      responses:
        200:
          description: 'Webhook processed successfully'
        400:
          description: 'Bad Request'
        500:
          description: 'Server Error'
  
  /api/telegram-debug:
    get:
      tags:
        - telegram
      summary: Telegram bot debug endpoint
      description: Provides debug information about the Telegram bot configuration
      produces:
        - application/json
      parameters:
        - name: command
          in: query
          type: string
          required: false
          description: Optional debug command (e.g., 'verifications', 'users')
      responses:
        200:
          description: 'Debug information'
          schema:
            type: object
            properties:
              status:
                type: string
              message:
                type: string
              webhook:
                type: object
        500:
          description: 'Server Error'

# definitions
definitions:
  submitReceipt:
    type: object
    required:
      - image
    properties:
      image:
        type: string
        description: Base64 encoded image data
      address:
        type: string
        description: User's wallet address
      deviceID:
        type: string
        description: User's device ID
  
  SubmissionResponse:
    type: object
    properties:
      status:
        type: string
        example: 'success'
      message:
        type: string
        example: 'Receipt processed successfully'
      data:
        type: object
        properties:
          id:
            type: string
            example: '12345'
          timestamp:
            type: string
            example: '2023-06-01T12:00:00Z'

schemes:
  - https
  - http
